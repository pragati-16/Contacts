{"version":3,"sources":["index.js"],"names":["express","require","PORT","path","app","set","join","__dirname","use","urlencoded","listen","err","console","log","contactList","name","phone","get","req","res","render","title","contact_list","post","push","body","redirect","query","contactIndex","findIndex","contact","splice"],"mappings":";;AAAA;AACA,IAAMA,OAAO,GAACC,OAAO,CAAC,SAAD,CAArB;;AACA,IAAMC,IAAI,GAAC,IAAX;;AACA,IAAMC,IAAI,GAACF,OAAO,CAAC,MAAD,CAAlB,C,CAEA;;;AACA,IAAMG,GAAG,GAACJ,OAAO,EAAjB,C,CACA;;AACAI,GAAG,CAACC,GAAJ,CAAQ,aAAR,EAAsB,KAAtB,E,CAAgC;;AAChCD,GAAG,CAACC,GAAJ,CAAQ,OAAR,EAAgBF,IAAI,CAACG,IAAL,CAAUC,SAAV,EAAoB,OAApB,CAAhB,E,CAA+C;AAE/C;;AACAH,GAAG,CAACI,GAAJ,CAAQR,OAAO,CAACS,UAAR,EAAR,E,CACA;;AACAL,GAAG,CAACI,GAAJ,CAAQR,OAAO,UAAP,CAAe,SAAf,CAAR;AAEAI,GAAG,CAACM,MAAJ,CAAWR,IAAX,EAAgB,UAASS,GAAT,EAAc;AAC5B,MAAGA,GAAH,EACAC,OAAO,CAACC,GAAR,CAAY,6CAAZ,EAA0DF,GAA1D;AACCC,EAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ,EAAgDX,IAAhD,EAH2B,CAG8B;AAC3D,CAJD,E,CAMA;;AACA,IAAIY,WAAW,GAAC,CACf;AACEC,EAAAA,IAAI,EAAC,SADP;AAEEC,EAAAA,KAAK,EAAC;AAFR,CADe,EAKf;AACED,EAAAA,IAAI,EAAC,QADP;AAEEC,EAAAA,KAAK,EAAC;AAFR,CALe,EASf;AACED,EAAAA,IAAI,EAAC,QADP;AAEEC,EAAAA,KAAK,EAAC;AAFR,CATe,CAAhB,C,CAcA;;AACAZ,GAAG,CAACa,GAAJ,CAAQ,GAAR,EAAY,UAASC,GAAT,EAAaC,GAAb,EAAkB;AAC3B;AACD;AACAP,EAAAA,OAAO,CAACC,GAAR,CAAYN,SAAZ;AACA,SAAOY,GAAG,CAACC,MAAJ,CAAW,MAAX,EACL;AACAC,IAAAA,KAAK,EAAC,cADN;AAEEC,IAAAA,YAAY,EAACR;AAFf,GADK,CAAP;AAKD,CATD;AAWAV,GAAG,CAACa,GAAJ,CAAQ,WAAR,EAAoB,UAASC,GAAT,EAAaC,GAAb,EAAkB;AACpC,SAAOA,GAAG,CAACC,MAAJ,CAAW,UAAX,EAAsB;AAACC,IAAAA,KAAK,EAAC;AAAP,GAAtB,CAAP;AACD,CAFD;AAIAjB,GAAG,CAACmB,IAAJ,CAAS,cAAT,EAAwB,UAASL,GAAT,EAAaC,GAAb,EAAkB;AAC1C;AACA;AACA;AACA;AACA;AACCL,EAAAA,WAAW,CAACU,IAAZ,CAAiBN,GAAG,CAACO,IAArB;AACA,SAAON,GAAG,CAACO,QAAJ,CAAa,MAAb,CAAP,CAPyC,CAOZ;AAC7B,CARD,E,CAUA;AAEA;;AACC;;;;;;;;;AASAtB,GAAG,CAACa,GAAJ,CAAQ,kBAAR,EAA2B,UAASC,GAAT,EAAaC,GAAb,EAAkB;AAC3C;AACA;AACAP,EAAAA,OAAO,CAACC,GAAR,CAAYK,GAAG,CAACS,KAAhB;AACC,MAAIX,KAAK,GAACE,GAAG,CAACS,KAAJ,CAAUX,KAApB;AACF,MAAIY,YAAY,GAACd,WAAW,CAACe,SAAZ,CAAsB,UAAAC,OAAO;AAAA,WAAGA,OAAO,CAACd,KAAR,IAAeA,KAAlB;AAAA,GAA7B,CAAjB;;AACA,MAAGY,YAAY,IAAE,CAAC,CAAlB,EAAqB;AACnBd,IAAAA,WAAW,CAACiB,MAAZ,CAAmBH,YAAnB,EAAgC,CAAhC;AACA,WAAOT,GAAG,CAACO,QAAJ,CAAa,MAAb,CAAP;AACD,GAHD,MAIK;AACH,WAAOP,GAAG,CAACC,MAAJ,CAAW,kCAAX,CAAP;AACD;AACD,CAbD","sourcesContent":["//we need to require express as other files \r\nconst express=require('express');\r\nconst PORT=8000;\r\nconst path=require('path');\r\n\r\n//we call express as a function in order to have all its basic functionalities use the name app\r\nconst app=express();\r\n//we have to tell express that ejs will be the engeine\r\napp.set('view engine','ejs');   //setting view-engine\r\napp.set('views',path.join(__dirname,'views')); //will search only in view folder  (setting view path) \r\n\r\n//taking data urlencoded act as middleware which recieves the data and parses it\r\napp.use(express.urlencoded());\r\n//calling the folder \r\napp.use(express.static('assests'));\r\n\r\napp.listen(PORT,function(err) {\r\n  if(err)\r\n  console.log(\"There is an error while loading the serever\",err);\r\n   console.log(\"The server is running on the port\",PORT);   //THis will not keep on loading the page as node.js i.e advantage of express\r\n});\r\n\r\n//creating contact list with use of an iterator\r\nvar contactList=[\r\n {\r\n   name:'Pragati',\r\n   phone:'111111111'\r\n },\r\n {\r\n   name:'Coding',\r\n   phone:'000000000'\r\n },\r\n {\r\n   name:'Ninjas',\r\n   phone:'123456789'\r\n }\r\n]\r\n//framework good at handling depenedencies on its own\r\napp.get('/',function(req,res) {\r\n   //res.send(\"Hi welcome to express!\");\r\n  // res.send('<h1>Welcome to express</h1>');\r\n  console.log(__dirname);\r\n  return res.render('home',\r\n    {\r\n    title:\"Learning Web\",\r\n      contact_list:contactList\r\n    });\r\n});\r\n\r\napp.get('/practice',function(req,res) {\r\n  return res.render('practice',{title:\"Practice Page\"});\r\n});\r\n\r\napp.post('/add-contact',function(req,res) {\r\n//  return res.redirect('/practice');\r\n//console.log(req.body);\r\n//console.log(req.body.name);\r\n// console.log(req.body.phone); \r\n//but this data is temporary and it will get vanish when we refresh the page \r\n contactList.push(req.body);\r\n return res.redirect('back'); //to come back again on home page we can use like('/') or('back')\r\n}); \r\n\r\n//whatever data we will take from browser we need to convert that or parse that data\r\n\r\n//creating middlewares :they act as an intermediate between req and res or controller we can create our own middlewares\r\n /* app.use(function(req,res,next) {\r\n  console.log(\"middleware 1\");\r\n  next();\r\n});   //next tells where to move next if no other middleware then it automatically calls main function\r\n \r\n app.use(function(req,res,next) {\r\nconsole.log(\"middleware 2\");\r\n });   */\r\n\r\n app.get('/delete-contact/',function(req,res) {\r\n   // will only give phone-number: console.log(req.params);\r\n   //both name and phone are given by : \r\n   console.log(req.query)\r\n    let phone=req.query.phone;\r\n  let contactIndex=contactList.findIndex(contact=> contact.phone==phone);\r\n  if(contactIndex!=-1) {\r\n    contactList.splice(contactIndex,1);\r\n    return res.redirect('back');\r\n  }\r\n  else {\r\n    return res.render('<h1>Oops! Nothing to delete</h1>');\r\n  }\r\n });\r\n "],"file":"index.dev.js"}