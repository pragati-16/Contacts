{"version":3,"sources":["index.js"],"names":["express","require","PORT","app","set","path","join","__dirname","urlencoded","listen","err","use","console","log","contactList","name","phone","get","req","res","contact_list","title","render","post","push","body","redirect","contactIndex","findIndex","query","splice","contact"],"mappings":"aACA,IAAMA,QAAQC,QAAQ,WADtBC,KAAA,IACMF,KAAOC,QAACA,QAKRE,IAAIH,UAEVG,IAAIC,IAAI,cAAc,OACtBD,IAAIC,IAAI,QAAQC,KAAKC,KAAKC,UAAU,UADpCJ,IAAIC,IAAIJ,QAAAQ,cACRL,IAAIC,IAAIJ,QAAR,OAAqBM,YAOrBH,IAAIM,OAAOP,KAAK,SAASQ,GAJrBC,GAMFC,QAAQC,IAAI,8CAA8CH,GAJzDE,QAAKZ,IAAO,oCAAfE,QAMC,IAEDY,YAAA,CAEC,CADDC,KAAID,UAEDC,MAAK,aAFQ,CAMbA,KAAK,SACLC,MAAM,aAGND,CACAC,KAAK,SAALA,MAGH,cAGEb,IAAAc,IAAA,IAAA,SAAAC,EAAAC,GAKIC,OADFC,QAAKR,IAACN,WACJa,EAAAA,OAAaN,OAHjB,CAJFO,MAAA,eAWIJ,aAAJH,gBAECX,IAFDc,IAAA,YAAA,SAAAC,EAAAC,GAIAhB,OAASgB,EAAAG,OAAA,WAAe,CAAAD,MAAA,oBAGxBlB,IAAAoB,KAAA,eAAA,SAAAL,EAAAC,GAIC,OAKDL,YAAAU,KAAAN,EAAAO,MALQN,EAAIO,SAAS,UAoBnBvB,IAAAc,IAAIU,mBAAab,SAAYc,EAAAA,GAF5BhB,QAAQC,IAAIK,EAAIW,OAGjB,IAAGF,EAAAA,EAAYE,MAAfb,MACEF,EAAYgB,YAAOH,UAAnB,SAAAI,GAAA,OAAAA,EAAAf,OAAAA,IACA,OAAWU,GAAXC,GAFFb,YAIKgB,OAAAH,EAAA,GACIR,EAAIG,SAAO,SAAXH,EAAIG,OAAO","file":"index.min.js","sourcesContent":["//we need to require express as other files \r\nconst express=require('express');\r\nconst PORT=8000;\r\nconst path=require('path');\r\n\r\n//we call express as a function in order to have all its basic functionalities use the name app\r\nconst app=express();\r\n//we have to tell express that ejs will be the engeine\r\napp.set('view engine','ejs');   //setting view-engine\r\napp.set('views',path.join(__dirname,'views')); //will search only in view folder  (setting view path) \r\n\r\n//taking data urlencoded act as middleware which recieves the data and parses it\r\napp.use(express.urlencoded());\r\n//calling the folder \r\napp.use(express.static('assests'));\r\n\r\napp.listen(PORT,function(err) {\r\n  if(err)\r\n  console.log(\"There is an error while loading the serever\",err);\r\n   console.log(\"The server is running on the port\",PORT);   //THis will not keep on loading the page as node.js i.e advantage of express\r\n});\r\n\r\n//creating contact list with use of an iterator\r\nvar contactList=[\r\n {\r\n   name:'Pragati',\r\n   phone:'111111111'\r\n },\r\n {\r\n   name:'Coding',\r\n   phone:'000000000'\r\n },\r\n {\r\n   name:'Ninjas',\r\n   phone:'123456789'\r\n }\r\n]\r\n//framework good at handling depenedencies on its own\r\napp.get('/',function(req,res) {\r\n   //res.send(\"Hi welcome to express!\");\r\n  // res.send('<h1>Welcome to express</h1>');\r\n  console.log(__dirname);\r\n  return res.render('home',\r\n    {\r\n    title:\"Learning Web\",\r\n      contact_list:contactList\r\n    });\r\n});\r\n\r\napp.get('/practice',function(req,res) {\r\n  return res.render('practice',{title:\"Practice Page\"});\r\n});\r\n\r\napp.post('/add-contact',function(req,res) {\r\n//  return res.redirect('/practice');\r\n//console.log(req.body);\r\n//console.log(req.body.name);\r\n// console.log(req.body.phone); \r\n//but this data is temporary and it will get vanish when we refresh the page \r\n contactList.push(req.body);\r\n return res.redirect('back'); //to come back again on home page we can use like('/') or('back')\r\n}); \r\n\r\n//whatever data we will take from browser we need to convert that or parse that data\r\n\r\n//creating middlewares :they act as an intermediate between req and res or controller we can create our own middlewares\r\n /* app.use(function(req,res,next) {\r\n  console.log(\"middleware 1\");\r\n  next();\r\n});   //next tells where to move next if no other middleware then it automatically calls main function\r\n \r\n app.use(function(req,res,next) {\r\nconsole.log(\"middleware 2\");\r\n });   */\r\n\r\n app.get('/delete-contact/',function(req,res) {\r\n   // will only give phone-number: console.log(req.params);\r\n   //both name and phone are given by : \r\n   console.log(req.query)\r\n    let phone=req.query.phone;\r\n  let contactIndex=contactList.findIndex(contact=> contact.phone==phone);\r\n  if(contactIndex!=-1) {\r\n    contactList.splice(contactIndex,1);\r\n    return res.redirect('back');\r\n  }\r\n  else {\r\n    return res.render('<h1>Oops! Nothing to delete</h1>');\r\n  }\r\n });\r\n "]}